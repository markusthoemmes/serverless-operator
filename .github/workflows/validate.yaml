---
name: Validate

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:
  generated-files-commited:
    name: Generated files are commited
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
    steps:
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x

      - name: Install YQ
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "github"
          github_pat: ${{ github.token }}
          yq: "3.4.1"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}

      - name: Regenerate all generated files
        working-directory: ./src/github.com/${{ github.repository }}
        run: make generated-files

      - name: Check if everything is consistent
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo '::debug::Running `git status`'
            git -c color.status=always status
            echo '::debug::Running `git diff`'
            git -c color.ui=always diff
            echo '::error::Not all generated files are commited. Run `make generated-files` and commit files.'
            echo '::warning::`make generated-files` needs to be run on GOPATH due to https://github.com/knative/pkg/issues/1287'
            exit 33
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
    steps:
      - name: Set up Go 1.15.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}

      - name: Install operator-sdk
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "github"
          github_pat: ${{ github.token }}
          operator-sdk: "1.7.2"

      - name: Install Tools
        working-directory: ./src/github.com/${{ github.repository }}
        env:
          WOKE_VERSION: v0.8.0
        run: |
          TEMP_PATH="$(mktemp -d)"
          cd $TEMP_PATH

          echo '::group::🐶 Installing reviewdog ... https://github.com/reviewdog/reviewdog'
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b "${TEMP_PATH}" 2>&1
          echo '::endgroup::'

          echo '::group:: Installing misspell ... https://github.com/client9/misspell'
          go get github.com/client9/misspell/cmd/misspell
          echo '::endgroup::'

          echo '::group:: Installing woke ... https://github.com/get-woke/woke'
          curl -sfL https://raw.githubusercontent.com/get-woke/woke/main/install.sh | sh -s -- -b "${TEMP_PATH}" "${WOKE_VERSION}" 2>&1
          echo '::endgroup::'

          echo "${TEMP_PATH}" >> $GITHUB_PATH

      - name: Shellcheck
        working-directory: ./src/github.com/${{ github.repository }}
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          find . -type f \
            -path './**/*.*sh' \
            -not -path '*vendor*' | xargs -r shellcheck --format=checkstyle \
            | reviewdog -f=checkstyle \
                -name="shellcheck" \
                -reporter="github-pr-check" \
                -filter-mode="added" \
                -fail-on-error="true" \
                -level="error"

      - name: Go Lint - knative-operator
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.40
          working-directory: ./src/github.com/${{ github.repository }}

      # This is mostly copied from https://github.com/get-woke/woke-action-reviewdog/blob/main/entrypoint.sh
      # since their action is not yet released under a stable version.
      - name: Language
        if: ${{ always() && github.event_name == 'pull_request' }}
        working-directory: ./src/github.com/${{ github.repository }}
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          woke --output simple \
            | reviewdog -efm="%f:%l:%c: %m" \
                -name="woke" \
                -reporter="github-pr-check" \
                -filter-mode="added" \
                -fail-on-error="true" \
                -level="error"

      - name: OLM Bundle
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          operator-sdk bundle validate ./olm-catalog/serverless-operator

      - name: Spelling
        working-directory: ./src/github.com/${{ github.repository }}
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          # Don't fail because of misspell
          set +o pipefail
          git ls-files | grep -Ev '^(vendor/|.git)' | xargs misspell -error xargs misspell -error \
            | reviewdog -efm="%f:%l:%c: %m" \
                -name="github.com/client9/misspell" \
                -reporter="github-pr-check" \
                -filter-mode="added" \
                -fail-on-error="true" \
                -level="error"
